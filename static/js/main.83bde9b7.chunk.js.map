{"version":3,"sources":["components/AppNavbar.js","components/Footer.js","components/Recipe.js","components/CheckList.js","components/HomePage.js","components/MyRecipes.js","components/AddRecipe.js","components/FoodNews.js","components/HealthChoice.js","components/Login.js","components/UserFunctions.js","components/Register.js","components/Profile.js","App.js","serviceWorker.js","index.js","css/recipe.module.css"],"names":["AppNavbar","props","toggle","setState","isOpen","state","bind","navCollapsed","showNavbar","loggedIn","e","preventDefault","localStorage","removeItem","this","window","location","reload","loginRegLink","Nav","className","navbar","NavItem","NavLink","href","userLink","onClick","logOut","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","Collapse","usertoken","React","Component","Footer","Fragment","Recipe","title","image","calories","ingredients","addRecipe","style","recipe","titleFont","recipeInstruction","map","ingredient","index","key","text","src","alt","library","add","faTrash","faEdit","CheckList","_id","body","notes","componentDidMount","getNotes","handleChange","value","target","axios","get","then","response","data","catch","console","log","editModal","displayNotes","length","note","id","icon","removeNote","submit","event","payload","url","method","resetUserInputs","confirm","delete","error","onSubmit","type","name","placeholder","onChange","duration","easing","HomePage","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","json","hits","label","string","line","arrToString","toFixed","image_url","totalWeight","getRecipe","MyRecipes","removeRecipe","displayRecipies","AddRecipe","elements","weight","FoodNews","articles","getArticles","displayArticles","article","author","content","description","urlToImage","HealthChoice","hints","food","category","categoryLabel","Login","email","password","user","post","res","setItem","err","login","history","push","noValidate","htmlFor","Register","first_name","last_name","newUser","Profile","token","decoded","jwt_decode","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.83bde9b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n  } from 'reactstrap';\r\n//   import { useHistory } from 'react-router-dom';\r\n\r\n\r\nclass AppNavbar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)        \r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false,\r\n            navCollapsed: true,\r\n            showNavbar: false,\r\n            loggedIn: false\r\n        }\r\n        // this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    logOut(e){\r\n        // const history = useHistory();\r\n        e.preventDefault();\r\n        localStorage.removeItem('usertoken');\r\n        this.setState({ loggedIn: false })\r\n        window.location.reload(false);\r\n        // this.props.history.push('/');\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        const loginRegLink = (\r\n            <Nav className=\"mr-0\" navbar>\r\n                <NavItem>\r\n                    <NavLink href=\"/login\">Login</NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n        )\r\n\r\n        const userLink = (\r\n            <Nav className=\"mr-0\" navbar>\r\n                <NavItem>\r\n                    <NavLink href=\"/profile\">Profile</NavLink>\r\n                </NavItem>\r\n                {/* <NavItem>\r\n                    <NavLink href=\"/\">Logout</NavLink>\r\n                </NavItem> */}\r\n                <a href=\"/\" onClick={this.logOut.bind(this)} className=\"nav-link\">\r\n                    Logout\r\n                </a>\r\n            </Nav>\r\n        )        \r\n\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"md\">\r\n                    <NavbarBrand href=\"/\">React-Recipes</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/home\">Home</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/foodnews\">Food News</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/healthchoices\">Health Choices</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/myrecipes\">My Recipes</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/addRecipe\">Add Recipe</NavLink>\r\n                        </NavItem>                    \r\n                    </Nav>\r\n                    {localStorage.usertoken ? userLink : loginRegLink}\r\n                    {/* <Nav className=\"mr-0\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/login\">Login</NavLink>\r\n                        </NavItem>\r\n                    </Nav> */}\r\n                    {/* <Nav className=\"mr-0\" navbar>\r\n                        <NavItem>\r\n                            <input placeholder=\"Enter name\" className=\"search-bar\" type=\"text\" onChange={changeName}/>\r\n                            <button className=\"search-button\" type=\"submit\" onClick={submitName}>Add Record</button>\r\n                        </NavItem>\r\n                    </Nav> */}\r\n                    \r\n                    </Collapse>\r\n                </Navbar>          \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppNavbar;","import React from 'react';\r\n\r\nimport '../css/footer.css';\r\n\r\n//Footer Component Specification using React Hooks\r\nfunction Footer(){\r\n         \r\n  //The following is rendered/displayed on the browser\r\n  return(\r\n    <React.Fragment>\r\n          <footer className=\"site-footer\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-6\">\r\n                  <h6>About</h6>\r\n                  <p className=\"text-justify\">This website hopes to provide access to all sorts of recipes worldwide. It should allow users to create there own collection of recipes, view recent news regarding food and allow users to add personal recipes to share to the world.</p>\r\n                </div>\r\n\r\n                <div className=\"col-xs-6 col-md-3\">\r\n                  <h6>Food Categories</h6>\r\n                  <ul className=\"footer-links\">\r\n                    <li>Grains</li>\r\n                    <li>Proteins</li>\r\n                    <li>Dairy</li>\r\n                    <li>Fats, Oils & Sweets</li>\r\n                    <li>Vegatables</li>\r\n                    <li>Fruits</li>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"col-xs-6 col-md-3\">\r\n                  <h6>Pages</h6>\r\n                  <ul className=\"footer-links\">\r\n                    <li><a href=\"/home\">Home</a></li>\r\n                    <li><a href=\"/foodnews\">Food News</a></li>\r\n                    <li><a href=\"/foodtrends\">Food Trends</a></li>\r\n                    <li><a href=\"/myrecipe\">My Recipes</a></li>\r\n                    <li><a href=\"/addrecipe\">Add Recipe</a></li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 col-sm-6 col-xs-12\">\r\n                  <p className=\"copyright-text\">Copyright &copy; 2017 All Rights Reserved by \r\n              <a href=\"/\"> eMargin8</a>.\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"col-md-4 col-sm-6 col-xs-12\">\r\n                  <ul className=\"social-icons\">\r\n                    <li><a className=\"facebook\" href=\"/\"><i className=\"fa fa-facebook\"></i></a></li>\r\n                    <li><a className=\"twitter\" href=\"/\"><i className=\"fa fa-twitter\"></i></a></li>\r\n                    <li><a className=\"dribbble\" href=\"/\"><i className=\"fa fa-dribbble\"></i></a></li>\r\n                    <li><a className=\"linkedin\" href=\"/\"><i className=\"fa fa-linkedin\"></i></a></li>   \r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n      </footer>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Footer;//Export the component to be used","import React from 'react';\r\nimport style from '../css/recipe.module.css';\r\n\r\n\r\nconst Recipe = ({title, calories, image, ingredients, addRecipe}) => {\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1 className={style.titleFont}>{title}</h1>\r\n            \r\n            <ol className={style.recipeInstruction}><b>Recipe:</b>\r\n                {ingredients.map((ingredient, index) => (\r\n                    <li key={index}>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            {/* <p>Calories: {calories.toFixed(0)}</p> */}\r\n            <img className={style.image} src={image} alt=\"\" />\r\n            {/* <button className={style.buttonPos}>Save Recipe</button> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {faTrash, faEdit} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\nimport axios from 'axios';\r\n\r\nimport '../css/checklist.css';\r\n\r\nlibrary.add(faTrash);\r\nlibrary.add(faEdit);\r\n\r\nclass CheckList extends React.Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        body: '',\r\n        notes: []\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.getNotes();\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { value } = target;\r\n        this.setState({ body: value });\r\n    };\r\n\r\n    //function used to get notes from mongo database\r\n    getNotes = () => {\r\n        axios.get('http://localhost:8080/api/notes')\r\n            .then((response) => {\r\n                const data = response.data;\r\n                this.setState({ notes: data });\r\n                // console.log('Data received from database');\r\n            })\r\n            .catch(() => {\r\n                console.log('Error receiving data...');\r\n            });\r\n    };\r\n\r\n    editModal = () => {\r\n\r\n    }\r\n\r\n    //function used to display notes in checklist\r\n    displayNotes = (notes) => {        \r\n        if(!notes.length) return null;\r\n\r\n        return notes.map((note) => {\r\n            return(         \r\n                       \r\n                <div key={note._id} className=\"list\">\r\n                    <p>\r\n                         <li id={note._id}>\r\n                            {note.body}\r\n                            <span>\r\n                                <FontAwesomeIcon className=\"faicons\" \r\n                                icon=\"trash\"\r\n                                onClick={ () => {this.removeNote(note._id)}}                           \r\n                                />\r\n                                {/* <FontAwesomeIcon className=\"faicons\" \r\n                                icon=\"edit\"\r\n                                onClick={ () => {this.editModal(note._id)}}                     \r\n                                /> */}\r\n                            </span>\r\n                        </li>\r\n                    </p>\r\n                </div>\r\n            )\r\n        });\r\n    };\r\n\r\n    //function used to remove a note from the list\r\n    removeNote(id){\r\n        // console.log(\"You clicked me...\", id);\r\n        if(window.confirm(\"Are you sure about deleting this item?\")){\r\n            axios.delete('http://localhost:8080/api/deleteNote/'+id)\r\n            .then(response => {\r\n                console.log('Note was deleted');\r\n                this.getNotes();\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error deleting...\", error);\r\n            })\r\n        }\r\n    }    \r\n\r\n    //function used to add notes to the checklist\r\n    submit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(this.state.body === '') return null;\r\n\r\n        const payload = {\r\n            body: this.state.body\r\n        };\r\n\r\n        axios({\r\n            url: 'http://localhost:8080/api/save',\r\n            method: 'POST',\r\n            data: payload\r\n        })\r\n            .then(() => {\r\n                console.log('Data has been sent to the server');\r\n                this.resetUserInputs();\r\n                this.getNotes();\r\n            })\r\n            .catch(() => {\r\n                console.log('Internal server error');\r\n            });\r\n    };\r\n\r\n    resetUserInputs = () => {\r\n        this.setState({\r\n            body: ''\r\n        });\r\n    };\r\n\r\n\r\n    \r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"CheckList\">\r\n                \r\n                <header>\r\n                    <form id=\"to-do-form\" onSubmit={this.submit}>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"newNote\"\r\n                            placeholder=\"Enter item: \"\r\n                            value={this.state.body}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button type=\"submit\">Add Item</button>\r\n                    </form>\r\n                    <div>\r\n                        <FlipMove duration={300} easing=\"ease-in-out\">\r\n                            <div className=\"notes\">\r\n                                {this.displayNotes(this.state.notes)}\r\n                            </div>\r\n                        </FlipMove>            \r\n                    </div>\r\n                </header>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckList;","import React, {useEffect, useState} from 'react';\r\nimport Recipe from './Recipe';\r\nimport CheckList from './CheckList';\r\nimport axios from 'axios';\r\n\r\nimport '../css/homepage.css';\r\n\r\nconst HomePage = () => {\r\n    const APP_ID = \"d66e2a9d\";\r\n    const APP_KEY = \"7cc5b4178a5c8cd7de97819f02da5f85\";\r\n  \r\n    const [recipes, setRecipes] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [query, setQuery] = useState('chicken');\r\n  \r\n    useEffect( () => {\r\n      getRecipes();\r\n    }, [query]);\r\n \r\n    const getRecipes = async () => {\r\n      const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n      const data = await response.json();\r\n      // console.log(\"Data pulled from original API: \", data);\r\n      setRecipes(data.hits);\r\n    };\r\n  \r\n    const updateSearch = e => {\r\n      setSearch(e.target.value);\r\n    };\r\n  \r\n    const getSearch = e => {\r\n      e.preventDefault();\r\n      setQuery(search);\r\n      setSearch('');\r\n    };\r\n\r\n    const arrToString = (recipe) => {\r\n      var string = '';\r\n      recipe.map((line, index) => {\r\n        string += '\\n'+(index+1)+'. '+line.text+',';\r\n      })\r\n      return string;\r\n    }\r\n\r\n    const getRecipe = (recipe) => {\r\n      // const ingredients = JSON.stringify(recipe.recipe.recipe.ingredients);\r\n      const ingredients = arrToString(recipe.recipe.recipe.ingredients);\r\n      \r\n      const payload = {\r\n        name: recipe.recipe.recipe.label,\r\n        recipe: ingredients,\r\n        calories: recipe.recipe.recipe.calories.toFixed(0),\r\n        image_url: recipe.recipe.recipe.image,\r\n        totalWeight: recipe.recipe.recipe.totalWeight.toFixed(0)\r\n      };\r\n\r\n      axios({\r\n          url: 'http://localhost:8080/api/addRecipe',\r\n          method: 'POST',\r\n          data: payload\r\n      })\r\n        .then(() => {\r\n            console.log('Data has been sent to the server');\r\n        })\r\n        .catch(() => {\r\n            console.log('Internal server error');\r\n        });\r\n    }\r\n  \r\n    return (    \r\n      <div className=\"HomePage\">\r\n        <h3 className=\"pageHeader\">Search for any recipe and make your own collection</h3>\r\n        <div className=\"container\">   \r\n            <div className=\"row\">                \r\n                <div className=\"col-md-9 col-sm-8 col-xs-8\">\r\n                    <form onSubmit={getSearch} className=\"search-form\">\r\n                        <input placeholder=\"Search for any recipe...\" className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\r\n                        <button className=\"search-button\" type=\"submit\">Search</button>\r\n                    </form>     \r\n                    <div>\r\n                      {recipes.map((recipe, index) => (\r\n                          <div key={index} className=\"recipes\">\r\n                            <Recipe \r\n                              key={index}\r\n                              title={recipe.recipe.label} \r\n                              calories={recipe.recipe.calories} \r\n                              image={recipe.recipe.image}\r\n                              ingredients={recipe.recipe.ingredients}\r\n                            />\r\n                            <button onClick={() => getRecipe({recipe})}>Add Recipe</button>\r\n                          </div>\r\n                      ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3 col-sm-4 col-xs-4\">\r\n                    <CheckList />\r\n                </div>\r\n\r\n            </div>  \r\n        </div>\r\n      </div> \r\n    );\r\n  };\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {faTrash, faEdit} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import Modal from \"react-bootstrap/Modal\";\r\n// import ReactDOM from \"react-dom\";\r\n\r\nimport '../css/myrecipes.css';\r\n\r\nlibrary.add(faTrash);\r\nlibrary.add(faEdit);\r\n\r\nclass MyRecipes extends React.Component {\r\n\r\n    state = {\r\n        recipes: []\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.getRecipes();\r\n    }\r\n\r\n    getRecipes = () => {\r\n        axios.get('http://localhost:8080/api/myrecipes')\r\n            .then((response) => {\r\n                const data = response.data;\r\n                this.setState({ recipes: data });\r\n                // console.log('Data received from database', data, this.state.recipes);\r\n            })\r\n            .catch(() => {\r\n                console.log('Error receiving data...');\r\n            });\r\n    };\r\n\r\n    removeRecipe = (id) => {\r\n        // console.log(\"Id: \", id);\r\n        if(window.confirm(\"Are you sure about deleting this recipe?\")){\r\n            axios.delete('http://localhost:8080/api/deleteRecipe/'+id)\r\n            .then(response => {\r\n                console.log('Recipe was deleted');\r\n                this.getRecipes();\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error deleting...\", error);\r\n            })\r\n        }\r\n    }\r\n\r\n    displayRecipies = (recipes) => {        \r\n        if(!recipes.length) return null;\r\n\r\n        return recipes.map((recipe, index) => {\r\n            return(         \r\n                       \r\n                <div key={index} className=\"section\">\r\n                    <div className=\"recipeSection\">\r\n                        <h3 className=\"name\">{recipe.name}</h3>\r\n                        <p className=\"recipe\">Recipe: <br />{recipe.recipe}</p>\r\n                        <p className=\"calories\">Calories: {recipe.calories} | Weight: {recipe.totalWeight}</p>\r\n                        \r\n                        <img className=\"image\" src={recipe.image_url} alt=\"...\"></img>\r\n                        <span className=\"buttons\">\r\n                            <FontAwesomeIcon className=\"faicons\" \r\n                            icon=\"trash\"\r\n                            onClick={ () => {this.removeRecipe(recipe._id)}}                           \r\n                            />\r\n                            <FontAwesomeIcon className=\"faicons\" \r\n                            icon=\"edit\"\r\n                            // onClick={ () => {this.editModal(recipe._id)}}                         \r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {/* {(this.state.recipes).map(recipe) => ( */}\r\n                    <h1 className=\"pageTitle\">Personal Recipe Collection</h1>\r\n                    <div>                        \r\n                        {this.displayRecipies(this.state.recipes)}\r\n                    </div>\r\n                {/* // )} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyRecipes;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport '../css/addrecipe.css';\r\n\r\n\r\nclass AddRecipe extends React.Component {\r\n\r\n    submit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // console.log(\"Eveent name: \", event.target.elements.name.value);\r\n        // console.log(\"Eveent recipe: \", event.target.elements.recipe.value);\r\n        // console.log(\"Eveent calories: \", event.target.elements.calories.value);\r\n        // console.log(\"Eveent weight: \", event.target.elements.weight.value);\r\n        // console.log(\"Eveent url: \", event.target.elements.image_url.value);\r\n\r\n        const payload = {\r\n            name: event.target.elements.name.value,\r\n            recipe: event.target.elements.recipe.value,\r\n            calories: event.target.elements.calories.value,\r\n            image_url: event.target.elements.weight.value,\r\n            totalWeight: event.target.elements.image_url.value\r\n        };\r\n\r\n        // console.log(\"Payload: \", payload);\r\n\r\n        axios({\r\n            url: 'http://localhost:8080/api/save',\r\n            method: 'POST',\r\n            data: payload\r\n        })\r\n            .then(() => {\r\n                console.log('Data has been sent to the server');\r\n                // this.resetUserInputs();\r\n                // this.getNotes();\r\n            })\r\n            .catch(() => {\r\n                console.log('Internal server error');\r\n            });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 className=\"header\">Add Recipe To Collection</h1>\r\n                <div className=\"container\">                \r\n                    <form className=\"formPosition\" onSubmit={this.submit}>\r\n                        <h3>Add Recipe: </h3>\r\n                        <p>Recipe Name: </p>\r\n                        <input type='text' name='name' placeholder='Enter your recipe name: '></input><br />\r\n                        <p>Recipe Instructions: </p>\r\n                        <textarea type='text' name='recipe' placeholder='Enter your recipe: '></textarea><br />\r\n                        <p>Recipe Calories: </p>\r\n                        <input type='text' name='calories' placeholder=\"Enter your recipe's total calories: \"></input><br />\r\n                        <p>Recipe Weight: </p>\r\n                        <input type='text' name='weight' placeholder=\"Enter your recipe's total weight: \"></input><br />\r\n                        <p>Recipe Image URL: </p>\r\n                        <input type='text' name='image_url' placeholder=\"Enter your recipe's image url: \"></input>\r\n                        <div className=\"btn-holder\">\r\n                            <button type=\"submit\">Add Recipe</button>\r\n                            <button type=\"button\">Cancel</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRecipe;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport '../css/foodnews.css';\r\n\r\nclass FoodNews extends React.Component {\r\n\r\n    state = {\r\n        articles: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getArticles(this.state.articles);\r\n    }\r\n\r\n    // componentWillReceiveProps = () => {\r\n    //     this.getArticles(this.state.articles);\r\n    // }\r\n\r\n    getArticles = async () => {\r\n        const API_KEY = \"8b1c3d56453d44368f69eeff24d5bf4d\";\r\n        axios.get(`http://newsapi.org/v2/everything?q=cooking&language=en&sortBy=relevancy&pageSize=10&apiKey=${API_KEY}`)\r\n            .then((response) => {\r\n                const data = response.data;\r\n                this.setState({ articles: data.articles });\r\n                // console.log('Data received from News API: ',  this.state.articles, data.articles);\r\n                // this.displayArticles(data);\r\n            })\r\n            .catch(() => {\r\n                console.log('Error receiving data...');\r\n            });\r\n    }\r\n\r\n    displayArticles = (articles) => {\r\n        // console.log(\"Function data: \", articles);\r\n        if(!articles.length) return null;\r\n        \r\n        return articles.map((article, index) => {\r\n            // console.log(\"Function12345t data2: \", article);\r\n            return(                       \r\n                <div key={index} className=\"articleSection\">\r\n                    {/* <h1>HELLELLOOOOO</h1> */}\r\n                    <h3 className=\"title\">{article.title}</h3>\r\n                    <p><b>Written by:</b> {article.author}</p>\r\n                    <p><b>Content: </b> {article.content}</p>\r\n                    <p><b>Description: </b> {article.description}</p>\r\n                    <p><b>Link to Full Article: </b><a href=\"/foodnews\"> {article.url}</a></p>\r\n                    <img className=\"imagePos center\" src={article.urlToImage} alt=\"N/A\"></img>\r\n                </div>\r\n            )\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"NewsSection\">\r\n                    <h3 className=\"pageHeader\">Food News Articles</h3>\r\n                    {this.displayArticles(this.state.articles)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FoodNews;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import Recipe from './Recipe';\r\n// import FoodSection from './FoodSection';\r\nimport '../css/healthchoice.css';\r\n\r\n\r\nconst HealthChoice = () => {\r\n    const APP_ID = \"e625b8c1\";\r\n    const APP_KEY = \"1debc070ab2e7f1a889ec5f8979f4f86\";\r\n\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    // const [ingredients, setIngridients] = useState([]);\r\n    const [query, setQuery] = useState('red');\r\n    // const [nutrients, displayNutrients] = useState([]);\r\n\r\n    useEffect( () => {\r\n        getRecipes();\r\n    }, [query]);\r\n\r\n    const getRecipes = async () => {\r\n        const response = await fetch(`https://api.edamam.com/api/food-database/parser?nutrition-type=Health&ingr=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n        const data = await response.json();\r\n        // console.log(\"Data pulled from new API: \", data.hints);\r\n        setRecipes(data.hints);\r\n        // setNutrients(data.hints);\r\n        // console.log(\"EEEEE: \",ingredients);\r\n    };\r\n\r\n    const updateSearch = e => {\r\n        setSearch(e.target.value);\r\n      };\r\n    \r\n    const getSearch = e => {\r\n        e.preventDefault();\r\n        setQuery(search);\r\n        setSearch('');\r\n    };\r\n\r\n    // const setNutrients = (recipes) => {\r\n    //     recipes.map((recipes) => {\r\n    //         var ingredient = recipes.food.nutrients;\r\n    //         // console.log(\"IIIIIII: \", ingredient);\r\n    //         ingredients.push(ingredient);\r\n    //     })\r\n    //     // displayNutrients();\r\n    // };\r\n\r\n    // const displayNutrients = () => {        \r\n    //     if(!ingredients.length) return null;\r\n\r\n    //     // console.log(\"Nutrients data: \", ingredients);\r\n    //     var list = '';\r\n        \r\n    //     return ingredients.map((nutrient, index) => {\r\n    //         // console.log(\"OOOOO: \", nutrient);\r\n    //         return(         \r\n                       \r\n    //             <div key={index} className=\"nutrientSection\">\r\n    //                 {list = JSON.stringify(nutrient)}\r\n    //                 <p>{list}</p>\r\n    //                 {/* <p className=\"recipe\">Recipe: <br />{recipe.recipe}</p> */}\r\n    //                 {/* <p className=\"calories\">Calories: {recipe.calories} | Weight: {recipe.totalWeight}</p> */}\r\n    //                 {/* <p>Nutrients:  </p>                     */}\r\n    //                 {/* <img className=\"image\" src={recipe.image_url} alt=\"...\"></img>                             */}\r\n    //             </div>\r\n    //         )\r\n    //     });\r\n    // };\r\n\r\n    return (\r\n        <div className=\"HealthChoice\">\r\n            <div className=\"container\">   \r\n                <div className=\"row\">\r\n                    <form onSubmit={getSearch} className=\"search-form2\">\r\n                        <input placeholder=\"Search for any food item to analyze its data...\" className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\r\n                        <button className=\"search-button\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    <div className=\"foodSection\">\r\n                        {recipes.map((recipe, index) => (\r\n                            // <FoodSection \r\n                            \r\n                            <div className=\"Item\" key={index}>\r\n                                {/* <p>key = {recipe.food.foodId}</p> */}\r\n                                <h3 className=\"title\">{recipe.food.label}</h3>\r\n                                {/* <p>id = {recipe.food.foodId}</p> */}\r\n                                {/* <p>brand = {recipe.food.brand}</p> */}\r\n                                <p>Category: {recipe.food.category}</p>\r\n                                <p>CategoryLabel: {recipe.food.categoryLabel}</p>\r\n                                {/* <p>Nutrients:  </p> */}\r\n                                {/* {recipe.food.nutrients.map((recipe, index) => {\r\n                                    return <li key={index}>{recipe.nutrients}</li>\r\n                                })} */}\r\n                                {/* <div>\r\n                                    {displayNutrients()}\r\n                                </div> */}\r\n                                \r\n                                <img className=\"image\" src={recipe.food.image} alt=\"...\"></img>                                \r\n                                {/* <p>nutrients = {recipe.food.nutrients}</p> */}\r\n                            </div>\r\n                            // />\r\n                        ))}\r\n                    </div>\r\n                    {/* {recipes.map((recipe, index) => (\r\n                        <Recipe \r\n                        key={index}\r\n                        title={recipe.recipe.label} \r\n                        calories={recipe.recipe.calories} \r\n                        image={recipe.recipe.image}\r\n                        ingredients={recipe.recipe.ingredients}\r\n                        />\r\n                    ))} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HealthChoice;","import React from 'react';\r\nimport {login} from './UserFunctions';\r\n\r\nimport '../css/login.css';\r\n\r\nclass Login extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        login(user).then(res => {\r\n            if(res) {\r\n                this.props.history.push('/')\r\n            }\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"pageDetails\">\r\n                <div className=\"container form\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-5 mx-auto\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email Address</label>\r\n                                    <input type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\r\n                                    Sign in\r\n                                </button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"signup\" >Don't have an account? <a href=\"/register\">Sign Up Now</a></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import axios from 'axios';\r\n\r\nexport const register = newUser => {\r\n    return axios\r\n        .post('http://localhost:8080/api/register', {\r\n            first_name: newUser.first_name,\r\n            last_name: newUser.last_name,\r\n            email: newUser.email,\r\n            password: newUser.password\r\n        })\r\n        .then(res => {\r\n            console.log('Registered!')\r\n        })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n        .post('http://localhost:8080/api/login', {\r\n            email: user.email,\r\n            password: user.password\r\n        })\r\n        .then(res => {\r\n            localStorage.setItem('usertoken', res.data)\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}","import React from 'react';\r\nimport {register} from './UserFunctions';\r\n\r\nimport '../css/login.css';\r\n\r\nclass Register extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const user = {\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        register(user).then(res => {\r\n            this.props.history.push('/login')\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"container form\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-5 mx-auto\">\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Register Now</h1>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"first_name\">First Name</label>\r\n                                <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"first_name\"\r\n                                placeholder=\"Enter First Name\"\r\n                                value={this.state.first_name}\r\n                                onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"last_name\">Last Name</label>\r\n                                <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"last_name\"\r\n                                placeholder=\"Enter Last Name\"\r\n                                value={this.state.last_name}\r\n                                onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email Address</label>\r\n                                <input type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                placeholder=\"Enter Email\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                placeholder=\"Enter Password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChange}/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\r\n                                Register\r\n                            </button>\r\n                        </form>\r\n\r\n                    </div>                    \r\n                </div>\r\n                <p className=\"signup\" >Already have an account? <a href=\"/login\">Login Instead</a></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport '../css/login.css';\r\n\r\nclass Profile extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const token = localStorage.usertoken\r\n        const decoded = jwt_decode(token)\r\n        this.setState({\r\n            first_name: decoded.first_name,\r\n            last_name: decoded.last_name,\r\n            email: decoded.email\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"jumbotron mt-5\">\r\n                    <div className=\"col-sm-8 mx-auto\">\r\n                        <h1 className=\"text-center\">PROFILE</h1>\r\n                    </div>\r\n                    <table className=\"table col-md-6 mx-auto\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>First Name</td>\r\n                                <td>{this.state.first_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Last Name</td>\r\n                                <td>{this.state.last_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Email</td>\r\n                                <td>{this.state.email}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n//Imported Components\nimport AppNavbar from \"./components/AppNavbar\";\nimport Footer from './components/Footer';\nimport HomePage from './components/HomePage';\nimport MyRecipes from './components/MyRecipes';\nimport AddRecipe from './components/AddRecipe';\nimport FoodNews from './components/FoodNews';\nimport HealthChoice from './components/HealthChoice';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\n\n//Imported CSS Files\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n\n  render() {\n\n    //JSX\n    return (    \n      <div className=\"App\">\n        <Router>\n\n          <AppNavbar/>\n\n          <Switch>\n\n            <Route path={[\"/home\", \"/\", \"\"]} exact component={HomePage}/>\n\n            <Route path={\"/foodnews\"} exact component={FoodNews}/>\n\n            <Route path={\"/healthchoices\"} exact component={HealthChoice}/>\n\n            <Route path={\"/myrecipes\"} exact component={MyRecipes}/>\n\n            <Route path={\"/addrecipe\"} exact component={AddRecipe}/>\n\n            <Route path={\"/login\"} exact component={Login}/>\n\n            <Route path={\"/register\"} exact component={Register}/>\n\n            <Route path={\"/profile\"} exact component={Profile}/>\n\n          </Switch>\n          \n          <Footer />\n\n        </Router>  \n\n      </div>         \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__iVN3S\",\"titleFont\":\"recipe_titleFont__3A79m\",\"recipeInstruction\":\"recipe_recipeInstruction__1m5ci\",\"image\":\"recipe_image__2GgVu\",\"buttonPos\":\"recipe_buttonPos__12ZxL\"};"],"sourceRoot":""}